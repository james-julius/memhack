generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id                  String              @id @default(uuid())
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  email               String              @unique
  name                String
  password            String
  emailVerified       DateTime?           @map("email_verified")
  image               String?
  salt                String
  accounts            Account[]           @relation("UserAccounts")
  sessions            Session[]
}

model Account {
  id                 String    @id @default(cuid())
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  provider           String
  providerAccountId  String    @map("provider_account_id")
  type               String
  userId             String    @map("user_id")
  user               User      @relation("UserAccounts", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationRequest {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  id         Int      @id @default(autoincrement())

  @@unique([identifier, token])
}

model MessageStore {
  id         Int    @id @default(autoincrement())
  session_id String
  message    Json
}